"""Initial migration

Revision ID: 95c7deb124cb
Revises: 
Create Date: 2025-05-25 03:19:48.175912

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '95c7deb124cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applicants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=20), nullable=True),
    sa.Column('last_name', sa.String(length=20), nullable=True),
    sa.Column('cnic', sa.String(length=20), nullable=True),
    sa.Column('father_cnic', sa.String(length=20), nullable=True),
    sa.Column('docs_folder', sa.String(length=20), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('applicants', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_applicants_email'), ['email'], unique=True)

    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.String(length=20), nullable=True),
    sa.Column('course_description', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instructors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instructor_name', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=20), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('bio', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('father_name', sa.String(length=20), nullable=True),
    sa.Column('cnic', sa.String(length=20), nullable=True),
    sa.Column('father_cnic', sa.String(length=20), nullable=True),
    sa.Column('docs_folder', sa.String(length=20), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_students_email'), ['email'], unique=True)

    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('application_date', sa.Date(), nullable=True),
    sa.Column('exam_status', sa.String(length=20), nullable=True),
    sa.Column('interview_status', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=20), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('room', sa.String(length=20), nullable=True),
    sa.Column('timings', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=200), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('course_section_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_enrollments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('course_section_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_sections.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_section_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('topic', sa.String(length=100), nullable=True),
    sa.Column('instructor_notes', sa.Text(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('link', sa.String(length=200), nullable=True),
    sa.Column('course_section_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_section_id'], ['course_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exams')
    op.drop_table('course_sessions')
    op.drop_table('course_enrollments')
    op.drop_table('announcements')
    op.drop_table('course_sections')
    op.drop_table('applications')
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_students_email'))

    op.drop_table('students')
    op.drop_table('instructors')
    op.drop_table('courses')
    with op.batch_alter_table('applicants', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_applicants_email'))

    op.drop_table('applicants')
    # ### end Alembic commands ###
